{
  "name": "com.unity.purchasing",
  "displayName": "In App Purchasing",
  "unity": "2021.3",
  "_upm": {
    "gameService": {
      "groupIndex": 4,
      "groupName": "Monetize",
      "configurePath": "Project/Services/In-App Purchasing",
      "genericDashboardUrl": "https://dashboard.unity3d.com/",
      "projectDashboardUrl": "https://dashboard.unity3d.com/organizations/{0}/projects/{1}/analytics/v2/dashboards/revenue",
      "projectDashboardUrlType": "OrganizationKeyAndProjectGuid"
    },
    "supportedPlatforms": [
      "Android",
      "iOS"
    ],
    "changelog": "### Added\n- Added `UnityIAPServies.StoreController` as a wrapper around the other services obtained through UnityIAPServices.\n  - Added `StoreController.PurchaseProduct(string productId)` to initiate a purchase using only the productId.\n- Added messages to `[Obsolete]` attributes on deprecated APIs, test methods, and internal classes.\n- Samples - Added Minimal Coded IAP 5.0.0 Sample to demonstrate a very basic implementation of Coded IAP.\n- Added documentation note in `UpgradeV5.md` clarifying the singleton behavior of `ConfigurationBuilder.Instance` and the use of its constructor as a workaround for scenarios requiring multiple initializations.\n- Added backwards compatibility support for `IAPListener` and `CodelessIAPButton` callbacks. When updating from an older IAP version, your scripts will continue to work without modification.\n- Apple - Added `IAppleStoreExtendedPurchaseService.SetRefreshAppReceipt` to refresh the receipt when a purchase succeeds (true by default). This is useful if are using a backwards compatible implementation or if you use `IOrderInfo.PurchasedProductInfo.subscriptionInfo`.\n- Added `IOrderInfo.Google` to provide access to information specific to orders coming from the Google Play Store.\n- Added `Orders.DeferredOrders` to provide access to deferred orders fetched from the store.\n- Added back `useFakeStoreUIMode` and `useFakeStoreAlways` variables to `StandardPurchasingModule` for backwards compatibility.\n  - Important: neither setting is respected by the FakeStore. Functionality has not been reimplemented.\n- Added back `Instance(AppStore androidStore)` call to `StandardPurchasingModule` for backwards compatibility. Calling `Instance(AppStore androidStore)` will return the same results as `Instance()` regardless of the provided AppStore.\n\n### Changed\n- IAP Catalog - Renamed `Automatically initialize UnityPurchasing (recommended)` to `Automatically initialize UnityIAPServices (recommended)`.\n  - Brought back `Apple Configuration`, `Google Configuration` and `Catalog Export` in IAP Catalog.\n  - Updated translation locales for Google Play Store and Apple App Store\n- Renamed APIs introduced since 5.0.0-pre.1 to improve consistency:\n  - `IStoreService.ConnectAsync` to `IStoreService.Connect`\n  - `IPurchaseService.ConfirmOrder` to `IPurchaseService.ConfirmPurchase`\n  - `IPurchaseService.IsProductEntitled` to `IPurchaseService.CheckEntitlement`\n  - `Entitlement.ProductChecked` to `Entitlement.Product`\n  - `Entitlement.EntitlementOrder` to `Entitlement.Order`\n  - `ConfirmOrderException` to `ConfirmPurchaseException`\n  - `INativeStore.RetrieveProducts` to `INativeStore.FetchProducts`\n- Callbacks introduced since 5.0.0-pre.1 were changed to events:\n  - `IProductService.AddProductsUpdatedAction` and `IProductService.RemoveProductsUpdatedAction` were replaced with `IProductService.OnProductsUpdated`\n  - `IProductService.AddProductsFetchFailedAction` and `IProductService.RemoveProductsFetchFailedAction` were replaced with `IProductService.OnProductsFetchFailed`\n  - `IPurchaseService.AddPendingOrderUpdatedAction` and `IPurchaseService.RemovePendingOrderUpdatedAction` were replaced with `IPurchaseService.OnPurchasePending`\n  - `IPurchaseService.AddConfirmedOrderUpdatedAction` and `IPurchaseService.RemoveConfirmedOrderUpdatedAction` were replaced with `IPurchaseService.OnPurchaseConfirmed`\n  - `IPurchaseService.AddPurchaseFailedAction` and `IPurchaseService.RemovePurchaseFailedAction` were replaced with `IPurchaseService.OnPurchaseFailed`\n  - `IPurchaseService.AddPurchaseDeferredAction` and `IPurchaseService.RemovePurchaseDeferredAction` were replaced with `IPurchaseService.OnPurchaseDeferred`\n  - `IPurchaseService.AddFetchedPurchasesAction` and `IPurchaseService.RemoveFetchedPurchasesAction` were replaced with `IPurchaseService.OnPurchasesFetched`\n  - `IPurchaseService.AddFetchPurchasesFailedAction` and `IPurchaseService.RemoveFetchPurchasesFailedAction` were replaced with `IPurchaseService.OnPurchasesFetchFailed`\n  - `IPurchaseService.AddCheckEntitlementAction` and `IPurchaseService.RemoveCheckEntitlementActio"
  },
  "version": "5.0.0-pre.8",
  "description": "IMPORTANT UPGRADE NOTES:\n\nThis is a major overhaul of the IAP package. Consult the included sample for a complete example on how to use this new version.\n\nPACKAGE DESCRIPTION:\n\nWith Unity IAP, setting up in-app purchases for your game across multiple app stores has never been easier.\n\nThis package provides:\n\n ▪ One common API to access all stores for free so you can fully understand and optimize your in-game economy\n ▪ Automatic coupling with Unity Analytics to enable monitoring and decision-making based on trends in your revenue and purchase data across multiple platforms\n ▪ Support for iOS, Mac, tvOS and Google Play.\n ▪ Client-side receipt validation for Apple App Store and Google Play\n\nAfter installing this package, open the Services Window to enable In-App Purchasing to use these features.",
  "dependencies": {
    "com.unity.ugui": "1.0.0",
    "com.unity.modules.unitywebrequest": "1.0.0",
    "com.unity.modules.jsonserialize": "1.0.0",
    "com.unity.modules.androidjni": "1.0.0",
    "com.unity.services.core": "1.12.5"
  },
  "keywords": [
    "purchasing",
    "iap",
    "unity"
  ],
  "license": "Unity Companion Package License v1.0",
  "hideInEditor": false,
  "relatedPackages": {
    "com.unity.purchasing.tests": "5.0.0-pre.8"
  },
  "upmCi": {
    "footprint": "738be00cf09300dcaa8a44bfb79cf9f45e3be232"
  },
  "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.purchasing@5.0/manual/index.html",
  "repository": {
    "url": "https://github.cds.internal.unity3d.com/unity/com.unity.purchasing.git",
    "type": "git",
    "revision": "65d7c586ed4fbaa5b3d3d34dac750704f1bd7eee"
  },
  "samples": [
    {
      "displayName": "Coded IAP 5.0.0 Sample",
      "description": "This sample showcases how to use Coded IAP in 5.0.0. ",
      "path": "Samples~/Coded IAP 5.0.0 Sample"
    },
    {
      "displayName": "Minimal Coded IAP 5.0.0 Sample",
      "description": "This sample showcases how to do a minimal implementation of Coded IAP in 5.0.0.",
      "path": "Samples~/Minimal Coded IAP 5.0.0 Sample"
    }
  ]
}
